---
- name: Download WP-CLI
  ansible.builtin.get_url:
    url: "{{ __wp_cli_download_url }}"
    dest: "/tmp/wp-cli.phar"
    mode: '0755'
    owner: root
    group: root

- name: Install WP-CLI
  ansible.builtin.copy:
    src: "/tmp/wp-cli.phar"
    dest: "{{ __wp_cli_install_path }}"
    mode: '0755'
    owner: root
    group: root
    remote_src: yes

- name: Check if WordPress is already configured
  ansible.builtin.stat:
    path: "{{ wordpress_path }}/.configured"
  register: wp_configured

- name: Ensure WordPress directory exists with correct permissions
  ansible.builtin.file:
    path: "{{ wordpress_path }}"
    state: directory
    owner: "{{ __wp_user }}"
    group: "{{ __wp_group }}"
    mode: '0775'
  when: not wp_configured.stat.exists

- name: Ensure WordPress directory exists (maintenance mode)
  ansible.builtin.file:
    path: "{{ wordpress_path }}"
    state: directory
  when: wp_configured.stat.exists

- name: Copy wp_install.sh script to /tmp
  ansible.builtin.copy:
    src: "wp_install.sh"
    dest: "/tmp/wp_install.sh"
    mode: '0755'
    owner: root
    group: root

- name: Run wp_install.sh script
  ansible.builtin.command:
    cmd: "/tmp/wp_install.sh"
    creates: "{{ wordpress_path }}/.configured"
  environment:
    WP_PATH: "{{ wordpress_path }}"
    WP_BACKEND_USER: "{{ __wp_user }}"
    WP_BACKEND_GROUP: "{{ __wp_group }}"
    WP_ADMIN_USERNAME: "{{ wordpress_admin_username }}"
    WP_ADMIN_PASSWORD: "{{ wordpress_admin_password }}"
    WP_ADMIN_EMAIL: "{{ wordpress_admin_email }}"
    WP_USER_USERNAME: "{{ wordpress_user_username }}"
    WP_USER_PASSWORD: "{{ wordpress_user_password }}"
    WP_USER_EMAIL: "{{ wordpress_user_email }}"
    WP_TITLE: "{{ wordpress_site_title }}"
    MARIADB_DATABASE: "{{ wordpress_db_name }}"
    MARIADB_USER: "{{ wordpress_db_user }}"
    MARIADB_USER_PASSWORD: "{{ wordpress_db_password }}"
    MARIADB_HOST: "{{ wordpress_db_host }}"
    MARIADB_PORT: "{{ wordpress_db_port }}"
    WEBSITE_URL: "{{ wordpress_website_url | default('http://localhost') }}"


- name: Ensure PHP-FPM is started
  ansible.builtin.service:
    name: "php{{ __phpfpm_version }}-fpm"
    state: started
    enabled: yes
