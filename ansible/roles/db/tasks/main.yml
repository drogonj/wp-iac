---
- name: Say Hello
  ansible.builtin.debug:
    msg: "Hello from DB role"

- name: Install PostgreSQL
  ansible.builtin.apt:
    name:
      - postgresql
      - postgresql-contrib
    state: present
    update_cache: yes
    clean: yes

- name: Find PostgreSQL config directory
  ansible.builtin.shell: find /etc/postgresql -name pg_hba.conf
  register: pg_hba_path

- name: Configure PostgreSQL authentication (trust for local postgres)
  ansible.builtin.lineinfile:
    path: "{{ pg_hba_path.stdout }}"
    regexp: '^local\s+all\s+postgres\s+peer'
    line: 'local   all             postgres                                trust'
    backup: true

- name: Configure PostgreSQL authentication (md5 for other users)
  ansible.builtin.lineinfile:
    path: "{{ pg_hba_path.stdout }}"
    regexp: '^local\s+all\s+all\s+peer'
    line: 'local   all             all                                     md5'
    backup: true

- name: Restart PostgreSQL to apply config changes
  ansible.builtin.service:
    name: postgresql
    state: restarted

- name: Wait for PostgreSQL restart
  ansible.builtin.wait_for:
    host: "localhost"
    port: "{{ db_port }}"
    delay: 3
    timeout: 30

- name: Ensure PostgreSQL service is started and enabled
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: yes

- name: Wait for PostgreSQL to be ready
  ansible.builtin.wait_for:
    host: "localhost"
    port: "{{ db_port }}"
    delay: 5
    timeout: 30
    state: started

- name: Create database user
  ansible.builtin.shell: |
    su postgres -c "psql -c \"CREATE USER {{ db_username }} WITH PASSWORD '{{ db_password }}';\" || true"

- name: Create database
  ansible.builtin.shell: |
    su postgres -c "createdb {{ db_name }} -O {{ db_username }} || true"

- name: Grant privileges to {{ db_username }} on database {{ db_name }}
  ansible.builtin.shell: |
    su postgres -c "psql -c \"GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_username }};\""

- name: Verify users rights on database
  ansible.builtin.shell: |
    su postgres -c "psql -c \"\\du\" && psql -c \"\\l\""
  register: db_infos

- debug:
    var: db_infos.stdout_lines